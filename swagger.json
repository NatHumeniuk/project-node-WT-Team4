{
  "openapi": "3.0.0",
  "info": {
    "title": "API Water Tracker",
    "version": "1.0.0",
    "description": "API for Water Tracker Project"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://project-node-wt-team4.onrender.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User upd info endpoints"
    },
    {
      "name": "Water",
      "description": "Water trackers endpoints"
    }
  ],

  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "/api/users/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verify user email",
        "description": "This endpoint verifies the user's email using a token sent to their email",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Verification token required to verify the user's email"
          }
        ],
        "responses": {
          "200": {
            "description": "Verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification successful"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "/api/users/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resend verification email",
        "description": "Resends the verification email to the user if they didn't receive it the first time",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address to which the verification email will be resent"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification email sent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "400": {
            "description": "Verification has already been passed"
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "/api/users/signin": {
      "post": {
        "security": [{ "Bearer": [] }],
        "tags": ["Auth"],
        "summary": "Sign in existing user",
        "parameters": [],
        "requestBody": {
          "description": "User's signin object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signin successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong or Email is't vefify",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "/api/users/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User sings out",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Signout success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          },

          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Logged user info returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          },

          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "/api/users/": {
      "patch": {
        "tags": ["User"],
        "summary": "Upd user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's upd info object",
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdUserInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Info was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdUserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "User update failed",
            "content": {}
          },
          "401": {
            "description": "Bearer auth failed or Old password is wrong",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "/api/trackers/": {
      "post": {
        "security": [{ "Bearer": [] }],
        "tags": ["Water"],
        "summary": "Added portion of water today",
        "parameters": [],
        "requestBody": {
          "description": "Water portion's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Time, volume and id of portion, which added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Water portion, time, and date are required",
            "content": {}
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/trackers/today": {
      "get": {
        "tags": ["Water"],
        "summary": "Get info about today water consumption",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Water portions during today and percentage of daily goal",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodayWaterTrackerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          },

          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/trackers/month/{year}/{month}": {
      "get": {
        "tags": ["Water"],
        "summary": "Get monthly statistics of water consumption",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Monthly statistics of water consumption",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthlyReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          },

          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "john.doe123@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "3959876!Qgfdgf8"
          }
        }
      },

      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token"
          },
          "user": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "User's name",
                "example": "john.doe123"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "john.doe123@example.com"
              }
            }
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWQxNDM3ODY3OTRmMjE4YjQ1MjdkYSIsImlhdCI6MTcxMzE4NTA1MCwiZXhwIjoxNzEzMjY3ODUwfQ.9cXV9QuhscFv9DKRjbzSkJLuAYgJyGV1CRD8uOPr5Fc",
          "user": {
            "username": "john.doe123",
            "email": "john.doe123@example.com"
          }
        }
      },
      "SigninRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "john.doe123@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "3959876!Qgfdgf8"
          }
        }
      },

      "SigninResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token"
          },
          "user": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "User's name",
                "example": "john.doe123"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "john.doe123@example.com"
              }
            }
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWQxNDM3ODY3OTRmMjE4YjQ1MjdkYSIsImlhdCI6MTcxMzE4NTA1MCwiZXhwIjoxNzEzMjY3ODUwfQ.9cXV9QuhscFv9DKRjbzSkJLuAYgJyGV1CRD8uOPr5Fc",
          "user": {
            "username": "john.doe123",
            "email": "john.doe123@example.com"
          }
        }
      },

      "CurrentUserInfoResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "john.doe123"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "john.doe123@example.com"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "Man"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar url",
            "example": "http://res.cloudinary.com/ddbqgch8e/image/upload/v1713198540/avatars/azjfryjytat5cpdh9ix5.webp"
          },
          "dailyWaterNorm": {
            "type": "number",
            "description": "User's daily norm",
            "example": "2000"
          }
        },
        "example": {
          "username": "john.doe123",
          "email": "john.doe123@example.com",
          "gender": "Man",
          "avatarURL": "http://res.cloudinary.com/ddbqgch8e/image/upload/v1713198540/avatars/azjfryjytat5cpdh9ix5.webp",
          "dailyWaterNorm": 2000
        }
      },

      "UpdUserInfoRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "Upd user avatar"
          },
          "username": {
            "type": "string",
            "description": "Upd user name",
            "example": "John"
          },
          "email": {
            "type": "string",
            "description": "Upd User's email",
            "format": "email",
            "example": "john123@example.com"
          },
          "password": {
            "type": "string",
            "description": "Old User's password",
            "example": "3959876!Qgfdgf8"
          },
          "passwordNew": {
            "type": "string",
            "description": "New User's password",
            "example": "3959876!Qgfdg34"
          },
          "gender": {
            "type": "string",
            "description": "Upd User's gender",
            "example": "Man"
          },
          "dailyWaterNorm": {
            "type": "number",
            "description": "Upd User's daily norm",
            "example": "3000"
          }
        }
      },

      "UpdUserInfoResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "john"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "john123@example.com"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "Man"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar url",
            "example": "http://res.cloudinary.com/ddbqgch8e/image/upload/v1713198540/avatars/azjfryjytat5cpdh9ix5.webp"
          },
          "dailyWaterNorm": {
            "type": "number",
            "description": "User's daily norm",
            "example": "3000"
          }
        },
        "example": {
          "description": "Only updated information is returned",
          "username": "john",
          "email": "john123@example.com",
          "gender": "Man",
          "avatarURL": "http://res.cloudinary.com/ddbqgch8e/image/upload/v1713198540/avatars/azjfryjytat5cpdh9ix5.webp",
          "dailyWaterNorm": 3000
        }
      },
      "PortionsRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Day of water intake",
            "example": "2024-04-20T10:21"
          },
          "waterVolume": {
            "type": "number",
            "description": "Water portion in ml",
            "example": "200"
          },
          "time": {
            "type": "string",
            "description": "time when drank water",
            "example": "2024-04-20T19:25"
          }
        },
        "example": {
          "date": "2024-04-20T10:21",
          "waterVolume": 200,
          "time": "2024-04-20T19:25"
        }
      },
      "PortionsResponse": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "time when drank water",
            "example": "2024-04-20T16:25:00.000Z"
          },
          "waterVolume": {
            "type": "number",
            "description": "Water portion in ml",
            "example": "200"
          },
          "_id": {
            "type": "string",
            "description": "Id of water portion",
            "example": "6623a80d55d99d1d499ce6e9"
          }
        },
        "example": {
          "time": "2024-04-20T16:25:00.000Z",
          "waterVolume": 200,
          "_id": "6623a80d55d99d1d499ce6e9"
        }
      },
      "TodayWaterTrackerResponse": {
        "type": "object",
        "properties": {
          "waterEntries": {
            "type": "array",
            "description": "User's water portion during today"
          },
          "items": {
            "type": "object",
            "properties": {
              "time": {
                "type": "string",
                "description": "time when drank water",
                "example": "2024-04-20T16:25:00.000Z"
              },
              "waterVolume": {
                "type": "number",
                "description": "Water portion in ml",
                "example": "200"
              },
              "_id": {
                "type": "string",
                "description": "Id of water portion",
                "example": "6623a80d55d99d1d499ce6e9"
              }
            }
          },
          "percentageOfDailyGoal": {
            "type": "string",
            "description": "Percentage of daily goal consumption",
            "example": "57%"
          }
        },
        "example": {
          "waterEntries": [
            {
              "time": "2024-04-21T00:25:00.000Z",
              "waterVolume": 500,
              "_id": "66239a9ec24575feb866b7b9"
            },
            {
              "time": "2024-04-21T01:20:00.000Z",
              "waterVolume": 600,
              "_id": "66239aa7c24575feb866b7c1"
            },
            {
              "time": "2024-04-21T16:25:00.000Z",
              "waterVolume": 300,
              "_id": "6624aab5e4ce587a7d449181"
            },
            {
              "time": "2024-04-21T16:25:00.000Z",
              "waterVolume": 300,
              "_id": "6624aae3cf8bb134145b1b66"
            }
          ],
          "percentageOfDailyGoal": "57%"
        }
      },
      "MonthlyReportResponse": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Day of searching period",
            "example": "1, April"
          },
          "dailyRate": {
            "type": "string",
            "description": "Daily water norm",
            "example": "3 L"
          },
          "percentageConsumed": {
            "type": "string",
            "description": "Percentage of consumed water from the daily norm",
            "example": "20%"
          },
          "numberOfPortions": {
            "type": "number",
            "description": "How many times were there records of water consumption",
            "example": 3
          }
        },
        "example": {
          "date": "1, April",
          "dailyRate": "3 L",
          "percentageConsumed": "20%",
          "numberOfPortions": 3
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
